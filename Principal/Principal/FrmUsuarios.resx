<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnUactualizar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VYkNtAAAAABJRU5ErkJggg==
</value>
  </data>
</root>